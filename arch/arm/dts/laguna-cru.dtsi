/* SPDX-License-Identifier: GPL-2.0+
 *
 * Device Tree Source for each subsystem clock and reset ctrl
 *
 * Copyright (C) 2024 Charleye <wangkart@aliyun.com>
 */

#include <dt-bindings/mfd/laguna-sysctl.h>
/ {
	cru {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		safety_wrap_cru: safety-wrap-cru@00600000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x00600000 0x00 0x1000>;
			#address-cells = <1>;
			#size-cells = <1>;

			safety_sysrst0: safety-reset@0 {
				compatible = "axera,lua-rst", "syscon-reset";
				#reset-cells = <1>;
				regmap = <&periph_cru>;
				offset = <0x124>;
				mask = <0xFFFFFFFF>;
				assert-high = <1>;
			};
		};

		safety_top_cru: safety-top-cru@00600000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x00600000 0x00 0x1000>;
			#address-cells = <1>;
			#size-cells = <1>;
		};

		comm_cru: common-cru@06101000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x06101000 0x00 0x1000>;
			#address-cells = <1>;
			#size-cells = <1>;

			comm_clk_mux: comm_clk_mux {
				compatible = "axera,lua-mux-clocks";
				regmap = <&comm_cru>;
				offset = <0x00>;
				mask = <0x1FFF>;

				aclk_top0: aclk_top0 {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv2>,
							 <&fab_pll_div2_lv1_0>, <&epll_div3_lv0>,
							 <&fab_pll_div2_lv1>;
					clock-names = "fab_pll_24m", "fab_pll_300m",
								  "fab_pll_400m", "epll_500m",
								  "fab_pll_600m";
					#clock-cells = <0>;
					clock-output-names = "aclk_top0";
					bit-shift = <0>;
					bit-width = <3>;
				};

				aclk_top1: aclk_top1 {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv2>,
							 <&fab_pll_div2_lv1_0>, <&epll_div3_lv0>,
							 <&fab_pll_div2_lv1>;
					clock-names = "fab_pll_24m", "fab_pll_300m",
								  "fab_pll_400m", "epll_500m",
								  "fab_pll_600m_90";
					#clock-cells = <0>;
					clock-output-names = "aclk_top1";
					bit-shift = <3>;
					bit-width = <3>;
				};

				aclk_top2: aclk_top2 {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv2>,
							 <&fab_pll_div2_lv1_0>, <&epll_div3_lv0>,
							 <&fab_pll_div2_lv1>;
					clock-names = "fab_pll_24m", "fab_pll_300m",
								  "fab_pll_400m", "epll_500m",
								  "fab_pll_600m_180";
					#clock-cells = <0>;
					clock-output-names = "aclk_top2";
					bit-shift = <6>;
					bit-width = <3>;
				};

				pclk_top: pclk_top {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv3_0>,
							 <&fab_pll_div2_lv2_0>;
					clock-names = "fab_pll_24m", "fab_pll_100m",
								  "fab_pll_200m";
					#clock-cells = <0>;
					clock-output-names = "pclk_top";
					bit-shift = <9>;
					bit-width = <2>;
				};

				clk_mux_comm_tmr: clk_mux_comm_tmr {
					compatible = "mux-clk";
					clocks = <&fake_32khz>, <&fab_pll_div5_lv3>;
					clock-names = "fake_32k", "fab_pll_24m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_comm_tmr";
					bit-shift = <11>;
					bit-width = <1>;
				};

				clk_mux_comm_wwdt: clk_mux_comm_wwdt {
					compatible = "mux-clk";
					clocks = <&fake_32khz>, <&main_xtal_24mhz>;
					clock-name = "fake_32k", "main_xtal_24m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_comm_wwdt";
					bit-shift = <12>;
					bit-width = <1>;
				};
			};

			comm_clk_mux_gate: comm_clk_mux_gate {
				compatible = "axera,lua-gate-clocks";
				regmap = <&comm_cru>;
				offset = <0x20>;
				mask = <0x3>;


				clk_comm_tmr: clk_comm_tmr {
					compatible = "clk_gate";
					clocks = <&clk_mux_comm_tmr>;
					clock-names = "clk_mux_comm_tmr";
					#clock-cells = <0>;
					clock-output-names = "clk_comm_tmr";
					bit-shift = <0>;
				};

				clk_comm_wwdt: clk_comm_wwdt {
					compatible = "clk_gate";
					clocks = <&clk_mux_comm_wwdt>;
					clock-name = "clk_mux_comm_wwdt";
					#clock-cells = <0>;
					clock-output-names = "clk_comm_wwdt";
					bit-shift = <1>;
				};
			};

			comm_clk_gate: common-clk-gate {
				compatible = "axera,lua-gate-clocks";
				regmap = <&comm_cru>;
				offset = <0x40>;
				mask = <0x7FFFFFFF>;

				pclk_tmr32_0: pclk_tmr32_0 {
					compatible = "clk_gate";
					clocks = <&clk_comm_24m>;
					clock-names = "clk_comm_24m";
					clock-output-names = "pclk_tmr32_0";
					bit-shift = <0>;
					#clock-cells = <0>;
				};

				pclk_tmr32_1: pclk_tmr32_1 {
					compatible = "clk_gate";
					clocks = <&clk_comm_24m>;
					clock-names = "clk_comm_24m";
					clock-output-names = "pclk_tmr32_1";
					bit-shift = <1>;
					#clock-cells = <0>;
				};

				pclk_tmr32_2: pclk_tmr32_2 {
					compatible = "clk_gate";
					clocks = <&clk_comm_24m>;
					clock-names = "clk_comm_24m";
					clock-output-names = "pclk_tmr32_2";
					bit-shift = <2>;
					#clock-cells = <0>;
				};

				pclk_tmr32_3: pclk_tmr32_3 {
					compatible = "clk_gate";
					clocks = <&clk_comm_24m>;
					clock-names = "clk_comm_24m";
					clock-output-names = "pclk_tmr32_3";
					bit-shift = <3>;
					#clock-cells = <0>;
				};

				tclk_tmr32_0: tclk_tmr32_0 {
					compatible = "clk_gate";
					clocks = <&clk_comm_tmr>;
					clock-names = "clk_comm_tmr";
					clock-output-names = "tclk_tmr32_0";
					bit-shift = <4>;
					#clock-cells = <0>;
				};

				tclk_tmr32_1: tclk_tmr32_1 {
					compatible = "clk_gate";
					clocks = <&clk_comm_tmr>;
					clock-names = "clk_comm_tmr";
					clock-output-names = "tclk_tmr32_1";
					bit-shift = <5>;
					#clock-cells = <0>;
				};

				tclk_tmr32_2: tclk_tmr32_2 {
					compatible = "clk_gate";
					clocks = <&clk_comm_tmr>;
					clock-names = "clk_comm_tmr";
					clock-output-names = "tclk_tmr32_2";
					bit-shift = <6>;
					#clock-cells = <0>;
				};

				tclk_tmr32_3: tclk_tmr32_3 {
					compatible = "clk_gate";
					clocks = <&clk_comm_tmr>;
					clock-names = "clk_comm_tmr";
					clock-output-names = "tclk_tmr32_3";
					bit-shift = <7>;
					#clock-cells = <0>;
				};

				pclk_wwdt_0: pclk_wwdt_0 {
					compatible = "clk_gate";
					clocks = <&clk_comm_24m>;
					clock-names = "clk_comm_24m";
					clock-output-names = "pclk_wwdt_0";
					bit-shift = <8>;
					#clock-cells = <0>;
				};

				pclk_wwdt_1: pclk_wwdt_1 {
					compatible = "clk_gate";
					clocks = <&clk_comm_24m>;
					clock-names = "clk_comm_24m";
					clock-output-names = "pclk_wwdt_1";
					bit-shift = <9>;
					#clock-cells = <0>;
				};

				pclk_wwdt_2: pclk_wwdt_2 {
					compatible = "clk_gate";
					clocks = <&clk_comm_24m>;
					clock-names = "clk_comm_24m";
					clock-output-names = "pclk_wwdt_2";
					bit-shift = <10>;
					#clock-cells = <0>;
				};

				pclk_wwdt_3: pclk_wwdt_3 {
					compatible = "clk_gate";
					clocks = <&clk_comm_24m>;
					clock-names = "clk_comm_24m";
					clock-output-names = "pclk_wwdt_3";
					bit-shift = <11>;
					#clock-cells = <0>;
				};

				tclk_wwdt_0: tclk_wwdt_0 {
					compatible = "clk_gate";
					clocks = <&clk_comm_wwdt>;
					clock-names = "clk_comm_wwdt";
					clock-output-names = "tclk_wwdt_0";
					bit-shift = <12>;
					#clock-cells = <0>;
				};

				tclk_wwdt_1: tclk_wwdt_1 {
					compatible = "clk_gate";
					clocks = <&clk_comm_wwdt>;
					clock-names = "clk_comm_wwdt";
					clock-output-names = "tclk_wwdt_1";
					bit-shift = <13>;
					#clock-cells = <0>;
				};

				tclk_wwdt_2: tclk_wwdt_2 {
					compatible = "clk_gate";
					clocks = <&clk_comm_wwdt>;
					clock-names = "clk_comm_wwdt";
					clock-output-names = "tclk_wwdt_2";
					bit-shift = <14>;
					#clock-cells = <0>;
				};

				tclk_wwdt_3: tclk_wwdt_3 {
					compatible = "clk_gate";
					clocks = <&clk_comm_wwdt>;
					clock-names = "clk_comm_wwdt";
					clock-output-names = "tclk_wwdt_3";
					bit-shift = <15>;
					#clock-cells = <0>;
				};
			};

			comm_sysrst: common-reset {
				compatible = "axera,lua-rst", "syscon-reset";
				#reset-cells = <1>;
				regmap = <&comm_cru>;
				offset = <LAGUNA_SYSCTL_COMM_SWRST>;
				mask = <0x7FFFFFFF>;
				assert-high = <1>;
			};
		};

		cpu_cru: cpu-cru@08011000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x08011000 0x00 0x1000>;
			#address-cells = <1>;
			#size-cells = <1>;

			cpu_sysrst: cpu-reset {
				compatible = "axera,lua-rst", "syscon-reset";
				#reset-cells = <1>;
				regmap = <&cpu_cru>;
				offset = <LAGUNA_SYSCTL_CPU_SWRST>;
				mask = <0x3F>;
				assert-high = <1>;
			};
		};

		ddr_cru: ddr-cru@0A000000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x0A000000 0x00 0x1000>;
			#address-cells = <1>;
			#size-cells = <1>;
		};

		flash_cru: flash-cru@0C001000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x0C001000 0x00 0x1000>;
			#address-cells = <1>;
			#size-cells = <1>;

			flash_clk_mux: flash-clk-mux {
				compatible = "axera,lua-mux-clocks";
				regmap = <&flash_cru>;
				offset = <0x00>;
				mask = <0x3F>;

				clk_flash_glb: clk_flash_glb {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv2_0>,
							 <&fab_pll_div2_lv2>, <&fab_pll_div2_lv1_0>;
					clock-names = "fab_pll_24m", "fab_pll_200m",
								  "fab_pll_300m", "fab_pll_400m";
					#clock-cells = <0>;
					clock-output-names = "clk_flash_glb";
					bit-shift = <0>;
					bit-width = <2>;
				};

				clk_mux_flash_ospi: clk_mux_flash_ospi {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv1_0>,
							 <&fab_pll_div2_lv1>, <&fab_pll_div3_lv0>;
					clock-names = "fab_pll_24m", "fab_pll_400m",
								  "fab_pll_600m", "fab_pll_800m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_flash_ospi";
					bit-shift = <2>;
					bit-width = <2>;
				};

				clk_mux_flash_sdm: clk_mux_flash_sdm {
					compatible = "mux-clk";
					clocks = <&fab_pll_div2_lv3_2>, <&fab_pll_div2_lv2_0>;
					clock-names = "fab_pll_150m", "fab_pll_200m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_flash_sdm";
					bit-shift = <4>;
					bit-width = <1>;
				};

				clk_mux_flash_ser: clk_mux_flash_ser {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv2_0>;
					clock-names = "fab_pll_24m", "fab_pll_200m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_flash_ser";
					bit-shift = <5>;
					bit-width = <1>;
				};
			};

			flash_clk_mux_gate: flash_clk_mux_gate {
				compatible = "axera,lua-gate-clocks";
				regmap = <&flash_cru>;
				offset = <0x20>;
				mask = <0x7>;

				clk_flash_ospi: clk_flash_ospi {
					compatible = "clk_gate";
					clocks = <&clk_mux_flash_ospi>;
					clock-names = "clk_mux_flash_ospi";
					#clock-cells = <0>;
					clock-output-names = "clk_flash_ospi";
					bit-shift = <0>;
				};

				clk_flash_sdm: clk_flash_sdm {
					compatible = "clk_gate";
					clocks = <&clk_mux_flash_sdm>;
					clock-name = "clk_mux_flash_sdm";
					#clock-cells = <0>;
					clock-output-names = "clk_flash_sdm";
					bit-shift = <1>;
				};

				clk_flash_ser: clk_flash_ser {
					compatible = "clk_gate";
					clocks = <&clk_mux_flash_ser>;
					clock-name = "clk_mux_flash_ser";
					#clock-cells = <0>;
					clock-output-names = "clk_flash_ser";
					bit-shift = <2>;
				};
			};

			flash_clk_gate: flash-clk-gate {
				compatible = "axera,lua-gate-clocks";
				regmap = <&flash_cru>;
				offset = <0x40>;
				mask = <0x3FFFFF>;

				hclk_flash_ospi: hclk_flash_ospi {
					compatible = "clk_gate";
					clocks = <&clk_flash_glb>;
					clock-names = "clk_flash_glb";
					clock-output-names = "hclk_flash_ospi";
					bit-shift = <0>;
					#clock-cells = <0>;
				};

				pclk_flash_dma_per0: pclk_flash_dma_per0 {
					compatible = "clk_gate";
					clocks = <&clk_flash_glb>;
					clock-names = "clk_flash_glb";
					clock-output-names = "pclk_flash_dma_per0";
					bit-shift = <1>;
					#clock-cells = <0>;
				};

				aclk_flash_dma_per0: aclk_flash_dma_per0 {
					compatible = "clk_gate";
					clocks = <&clk_flash_glb>;
					clock-names = "clk_flash_glb";
					clock-output-names = "aclk_flash_dma_per0";
					bit-shift = <2>;
					#clock-cells = <0>;
				};

				sdmclk_sd: sdmclk_sd {
					compatible = "clk_gate";
					clocks = <&clk_flash_sdm>;
					clock-names = "clk_flash_sdm";
					clock-output-names = "sdmclk_sd";
					bit-shift = <3>;
					#clock-cells = <0>;
				};

				clk_sd: clk_sd {
					compatible = "clk_gate";
					clocks = <&clk_flash_glb>;
					clock-names = "clk_flash_glb";
					clock-output-names = "clk_sd";
					bit-shift = <4>;
					#clock-cells = <0>;
				};

				sdmclk_emmc: sdmclk_emmc {
					compatible = "clk_gate";
					clocks = <&clk_flash_sdm>;
					clock-names = "clk_flash_sdm";
					clock-output-names = "sdmclk_emmc";
					bit-shift = <5>;
					#clock-cells = <0>;
				};

				clk_emmc: clk_emmc {
					compatible = "clk_gate";
					clocks = <&clk_flash_glb>;
					clock-names = "clk_flash_glb";
					clock-output-names = "clk_emmc";
					bit-shift = <6>;
					#clock-cells = <0>;
				};

				pclk_flash_spi_m7: pclk_flash_spi_m7 {
					compatible = "clk_gate";
					clocks = <&clk_flash_glb>;
					clock-names = "clk_flash_glb";
					clock-output-names = "pclk_flash_spi_m7";
					bit-shift = <7>;
					#clock-cells = <0>;
				};

				clk_flash_spi_m7: clk_flash_spi_m7 {
					compatible = "clk_gate";
					clocks = <&clk_flash_ser>;
					clock-names = "clk_flash_ser";
					clock-output-names = "clk_flash_spi_m7";
					bit-shift = <8>;
					#clock-cells = <0>;
				};

				pclk_flash_i2c9: pclk_flash_i2c9 {
					compatible = "clk_gate";
					clocks = <&clk_flash_glb>;
					clock-names = "clk_flash_glb";
					clock-output-names = "pclk_flash_i2c9";
					bit-shift = <9>;
					#clock-cells = <0>;
				};

				clk_flash_i2c9: clk_flash_i2c9 {
					compatible = "clk_gate";
					clocks = <&clk_flash_ser>;
					clock-names = "clk_flash_ser";
					clock-output-names = "clk_flash_i2c9";
					bit-shift = <10>;
					#clock-cells = <0>;
				};

				pclk_flash_gpio6: pclk_flash_gpio6 {
					compatible = "clk_gate";
					clocks = <&clk_flash_glb>;
					clock-names = "clk_flash_glb";
					clock-output-names = "pclk_flash_gpio6";
					bit-shift = <11>;
					#clock-cells = <0>;
				};

				clk_flash_gpio6: clk_flash_gpio6 {
					compatible = "clk_gate";
					clocks = <&clk_flash_24m>;
					clock-names = "clk_flash_24m";
					clock-output-names = "clk_flash_gpio6";
					bit-shift = <12>;
					#clock-cells = <0>;
				};

				pclk_flash_pinmux: pclk_flash_pinmux {
					compatible = "clk_gate";
					clocks = <&clk_flash_glb>;
					clock-names = "clk_flash_glb";
					clock-output-names = "pclk_flash_pinmux";
					bit-shift = <13>;
					#clock-cells = <0>;
				};
			};

			flash_sysrst: flash-reset {
				compatible = "axera,lua-rst", "syscon-reset";
				#reset-cells = <1>;
				regmap = <&flash_cru>;
				offset = <LAGUNA_SYSCTL_FLASH_SWRST>;
				mask = <0x3FFFFF>;
				assert-high = <1>;
			};
		};

		periph_cru: periph-cru@0E001000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x0E001000 0x00 0x1000>;
			#address-cells = <1>;
			#size-cells = <1>;

			periph_clk_mux: periph-clk-mux {
				compatible = "axera,lua-mux-clocks";
				regmap = <&periph_cru>;
				offset = <0x00>;
				mask = <0xFFFF>;

				clk_periph_glb: clk_periph_glb {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv2_0>,
							 <&fab_pll_div2_lv2>, <&fab_pll_div2_lv1_0>;
					clock-names = "fab_pll_24m", "fab_pll_200m",
								  "fab_pll_300m", "fab_pll_400m";
					#clock-cells = <0>;
					clock-output-names = "clk_periph_glb";
					bit-shift = <0>;
					bit-width = <2>;
				};

				mux_sclk_i2s_m: mux_sclk_i2s_m {
					compatible = "mux-clk";
					clocks = <&apll_div5_lv2>, <&apll_div5_lv3>,
							 <&apll_div5_lv2_0>;
					clock-names = "apll_16p384m", "apll_20p48m",
								  "apll_24p576m";
					#clock-cells = <0>;
					clock-output-names = "mux_sclk_i2s_m";
					bit-shift = <2>;
					bit-width = <2>;
				};

				clk_mux_periph_gpio: clk_mux_periph_gpio {
					compatible = "mux-clk";
					clocks = <&fake_32khz>, <&fab_pll_div5_lv3>;
					clock-names = "fake_32k", "fab_pll_24m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_periph_gpio";
					bit-shift = <4>;
					bit-width = <1>;
				};

				clk_mux_periph_ser: clk_mux_periph_ser {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv3_0>,
							 <&fab_pll_div2_lv2_0>;
					clock-names = "fab_pll_24m", "fab_pll_100m",
								  "fab_pll_200m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_periph_ser";
					bit-shift = <5>;
					bit-width = <2>;
				};

				pclk_usb_phy_bus: pclk_usb_phy_bus {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&fab_pll_div2_lv3>;
					clock-names = "fab_pll_24m", "fab_pll_60m";
					#clock-cells = <0>;
					clock-output-names = "pclk_usb_phy_bus";
					bit-shift = <7>;
					bit-width = <1>;
				};

				clk_mux_main_rgmii_tx: clk_mux_main_rgmii_tx {
					compatible = "mux-clk";
					clocks = <&epll_div5_lv4>, <&epll_div3_lv2>,
							 <&epll_div2_lv1>;
					clock-names = "epll_5m", "epll_50m",
								  "epll_250m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_main_rgmii_tx";
					bit-shift = <8>;
					bit-width = <2>;
				};

				clk_mux_main_can_pe: clk_mux_main_can_pe {
					compatible = "mux-clk";
					clocks = <&fab_pll_div2_lv3_1>, <&fab_pll_div2_lv2_1>,
							 <&fab_pll_div6_lv1>;
					clock-names = "fab_pll_20m", "fab_pll_40m",
								  "fab_pll_80m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_main_can_pe";
					bit-shift = <10>;
					bit-width = <2>;
				};

				clk_mux_main_ephy_ref: clk_mux_main_ephy_ref {
					compatible = "mux-clk";
					clocks = <&fab_pll_div5_lv3>, <&epll_div2_lv3>,
							 <&epll_div3_lv2>, <&epll_div2_lv2>;
					clock-names = "fab_pll_24m", "epll_25m",
								  "epll_50m", "epll_125m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_main_ephy_ref";
					bit-shift = <12>;
					bit-width = <2>;
				};

				clk_mux_i2s_ref: clk_mux_i2s_ref {
					compatible = "mux-clk";
					clocks = <&apll_div10_lv2>, <&apll_div5_lv3>,
							 <&fab_pll_div5_lv3>, <&epll_div2_lv3>;
					clock-names = "apll_12p288m", "apll_20p48m",
								  "fab_pll_24m", "epll_25m";
					#clock-cells = <0>;
					clock-output-names = "clk_mux_i2s_ref";
					bit-shift = <14>;
					bit-width = <2>;
				};
			};

			periph_clk_div: periph_clk_div {
				compatible = "axera,lua-divider-clock";
				regmap = <&periph_cru>;
				offset = <0x80>;
				mask = <0xFFF>;

				sclk_i2s_m_divn: sclk_i2s_m_divn {
					compatible = "divider-clk";
					clocks = <&mux_sclk_i2s_m>;
					clock-names = "mux_sclk_i2s_m";
					clock-output-names = "sclk_i2s_m_divn";
					bit-shift = <0>;
					bit-width = <6>;
					bit-update = <6>;
					#clock-cells = <0>;
				};

				clk_i2s_ref_divn: clk_i2s_ref_divn {
					compatible = "divider-clk";
					clocks = <&clk_mux_i2s_ref>;
					clock-names = "clk_mux_i2s_ref";
					clock-output-names = "clk_i2s_ref_divn";
					bit-shift = <7>;
					bit-width = <4>;
					bit-update = <11>;
					#clock-cells = <0>;
				};
			};

			periph_clk_mux_gate: periph_clk_mux_gate {
				compatible = "axera,lua-gate-clocks";
				regmap = <&periph_cru>;
				offset = <0x20>;
				mask = <0x3FF>;

				sclk_i2s_m: sclk_i2s_m {
					compatible = "clk_gate";
					clocks = <&sclk_i2s_m_divn>;
					clock-names = "sclk_i2s_m_divn";
					#clock-cells = <0>;
					clock-output-names = "sclk_i2s_m";
					bit-shift = <0>;
				};

				clk_periph_gpio: clk_periph_gpio {
					compatible = "clk_gate";
					clocks = <&clk_mux_periph_gpio>;
					clock-names = "clk_mux_periph_gpio";
					#clock-cells = <0>;
					clock-output-names = "clk_periph_gpio";
					bit-shift = <1>;
				};

				clk_periph_ser: clk_periph_ser {
					compatible = "clk_gate";
					clocks = <&clk_mux_periph_ser>;
					clock-names = "clk_mux_periph_ser";
					#clock-cells = <0>;
					clock-output-names = "clk_periph_ser";
					bit-shift = <2>;
				};

				utmi_refclk: utmi_refclk {
					compatible = "clk_gate";
					clocks = <&fab_pll_div5_lv3>;
					clock-names = "fab_pll_24m";
					#clock-cells = <0>;
					clock-output-names = "utmi_refclk";
					bit-shift = <3>;
				};

				clk_main_rgmii_tx: clk_main_rgmii_tx {
					compatible = "clk_gate";
					clocks = <&clk_mux_main_rgmii_tx>;
					clock-names = "clk_mux_main_rgmii_tx";
					#clock-cells = <0>;
					clock-output-names = "clk_main_rgmii_tx";
					bit-shift = <4>;
				};

				clk_main_rmii_phy: clk_main_rmii_phy {
					compatible = "clk_gate";
					clocks = <&epll_div3_lv2>;
					clock-names = "epll_50m";
					#clock-cells = <0>;
					clock-output-names = "clk_main_rmii_phy";
					bit-shift = <5>;
				};

				clk_main_can_pe: clk_main_can_pe {
					compatible = "clk_gate";
					clocks = <&clk_mux_main_can_pe>;
					clock-names = "clk_mux_main_can_pe";
					#clock-cells = <0>;
					clock-output-names = "clk_main_can_pe";
					bit-shift = <6>;
				};

				clk_main_ephy_ref: clk_main_ephy_ref {
					compatible = "clk_gate";
					clocks = <&clk_mux_main_ephy_ref>;
					clock-names = "clk_mux_main_ephy_ref";
					#clock-cells = <0>;
					clock-output-names = "clk_main_ephy_ref";
					bit-shift = <7>;
				};

				clk_periph_emac_ptp: clk_periph_emac_ptp {
					compatible = "clk_gate";
					clocks = <&fab_pll_div2_lv3_0>;
					clock-names = "fab_pll_100m";
					#clock-cells = <0>;
					clock-output-names = "clk_periph_emac_ptp";
					bit-shift = <8>;
				};

				clk_i2s_ref: clk_i2s_ref {
					compatible = "clk_gate";
					clocks = <&clk_i2s_ref_divn>;
					clock-names = "clk_i2s_ref_divn";
					#clock-cells = <0>;
					clock-output-names = "clk_i2s_ref";
					bit-shift = <9>;
				};
			};

			periph_clk_gate_0: periph_clk_gate@0 {
				compatible = "axera,lua-gate-clocks";
				regmap = <&periph_cru>;
				offset = <0x40>;
				mask = <0xFFFFFFFF>;

				pclk_periph_spi_s: pclk_periph_spi_s {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_spi_s";
					bit-shift = <0>;
					#clock-cells = <0>;
				};

				clk_periph_spi_s: clk_periph_spi_s {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_spi_s";
					bit-shift = <1>;
					#clock-cells = <0>;
				};

				pclk_periph_gpio4: pclk_periph_gpio4 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_gpio4";
					bit-shift = <2>;
					#clock-cells = <0>;
				};

				pclk_periph_gpio5: pclk_periph_gpio5 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_gpio5";
					bit-shift = <3>;
					#clock-cells = <0>;
				};

				clk_periph_gpio4: clk_periph_gpio4 {
					compatible = "clk_gate";
					clocks = <&clk_periph_gpio>;
					clock-names = "clk_periph_gpio";
					clock-output-names = "clk_periph_gpio4";
					bit-shift = <4>;
					#clock-cells = <0>;
				};

				clk_periph_gpio5: clk_periph_gpio5 {
					compatible = "clk_gate";
					clocks = <&clk_periph_gpio>;
					clock-names = "clk_periph_gpio";
					clock-output-names = "clk_periph_gpio5";
					bit-shift = <5>;
					#clock-cells = <0>;
				};

				pclk_i2s_m: pclk_i2s_m {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_i2s_m";
					bit-shift = <6>;
					#clock-cells = <0>;
				};

				pclk_i2s_s: pclk_i2s_s {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_i2s_s";
					bit-shift = <7>;
					#clock-cells = <0>;
				};

				pclk_periph_pinreg: pclk_periph_pinreg {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_pinreg";
					bit-shift = <8>;
					#clock-cells = <0>;
				};

				pclk_periph_uart1: pclk_periph_uart1 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_uart1";
					bit-shift = <9>;
					#clock-cells = <0>;
				};

				pclk_periph_uart2: pclk_periph_uart2 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_uart2";
					bit-shift = <10>;
					#clock-cells = <0>;
				};

				pclk_periph_uart3: pclk_periph_uart3 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_uart3";
					bit-shift = <11>;
					#clock-cells = <0>;
				};

				pclk_periph_uart4: pclk_periph_uart4 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_uart4";
					bit-shift = <12>;
					#clock-cells = <0>;
				};

				pclk_periph_uart5: pclk_periph_uart5 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_uart5";
					bit-shift = <13>;
					#clock-cells = <0>;
				};

				clk_periph_uart1: clk_periph_uart1 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_uart1";
					bit-shift = <14>;
					#clock-cells = <0>;
				};

				clk_periph_uart2: clk_periph_uart2 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_uart2";
					bit-shift = <15>;
					#clock-cells = <0>;
				};

				clk_periph_uart3: clk_periph_uart3 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_uart3";
					bit-shift = <16>;
					#clock-cells = <0>;
				};

				clk_periph_uart4: clk_periph_uart4 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_uart4";
					bit-shift = <17>;
					#clock-cells = <0>;
				};

				clk_periph_uart5: clk_periph_uart5 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_uart5";
					bit-shift = <18>;
					#clock-cells = <0>;
				};

				pclk_periph_i2c4: pclk_periph_i2c4 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_i2c4";
					bit-shift = <19>;
					#clock-cells = <0>;
				};

				pclk_periph_i2c5: pclk_periph_i2c5 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_i2c5";
					bit-shift = <20>;
					#clock-cells = <0>;
				};

				pclk_periph_i2c7: pclk_periph_i2c7 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_i2c7";
					bit-shift = <21>;
					#clock-cells = <0>;
				};

				pclk_periph_i2c8: pclk_periph_i2c8 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_i2c8";
					bit-shift = <22>;
					#clock-cells = <0>;
				};

				clk_periph_i2c4: clk_periph_i2c4 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_i2c4";
					bit-shift = <23>;
					#clock-cells = <0>;
				};

				clk_periph_i2c5: clk_periph_i2c5 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_i2c5";
					bit-shift = <24>;
					#clock-cells = <0>;
				};

				clk_periph_i2c7: clk_periph_i2c7 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_i2c7";
					bit-shift = <25>;
					#clock-cells = <0>;
				};

				clk_periph_i2c8: clk_periph_i2c8 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_i2c8";
					bit-shift = <26>;
					#clock-cells = <0>;
				};

				pclk_periph_spi_m5: pclk_periph_spi_m5 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_spi_m5";
					bit-shift = <27>;
					#clock-cells = <0>;
				};

				clk_periph_spi_m5: clk_periph_spi_m5 {
					compatible = "clk_gate";
					clocks = <&clk_periph_ser>;
					clock-names = "clk_periph_ser";
					clock-output-names = "clk_periph_spi_m5";
					bit-shift = <28>;
					#clock-cells = <0>;
				};

				pclk_usb_phy: pclk_usb_phy {
					compatible = "clk_gate";
					clocks = <&pclk_usb_phy_bus>;
					clock-names = "pclk_usb_phy_bus";
					clock-output-names = "pclk_usb_phy";
					bit-shift = <29>;
					#clock-cells = <0>;
				};

				hclk_usb_ctrl: hclk_usb_ctrl {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "hclk_usb_ctrl";
					bit-shift = <30>;
					#clock-cells = <0>;
				};

				aclk_usb_ctrl: aclk_usb_ctrl {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "aclk_usb_ctrl";
					bit-shift = <31>;
					#clock-cells = <0>;
				};
			};

			periph_clk_gate_1: periph_clk_gate@1 {
				compatible = "axera,lua-gate-clocks";
				regmap = <&periph_cru>;
				offset = <0x44>;

				pclk_periph_crc_engine: pclk_periph_crc_engine {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_crc_engine";
					bit-shift = <0>;
					#clock-cells = <0>;
				};

				clk_periph_crc_engine: clk_periph_crc_engine {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "clk_periph_crc_engine";
					bit-shift = <1>;
					#clock-cells = <0>;
				};

				pclk_periph_ax_dma_per: pclk_periph_ax_dma_per {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_ax_dma_per";
					bit-shift = <2>;
					#clock-cells = <0>;
				};

				clk_periph_ax_dma_per: clk_periph_ax_dma_per {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "clk_periph_ax_dma_per";
					bit-shift = <3>;
					#clock-cells = <0>;
				};

				pclk_periph_ax_dma: pclk_periph_ax_dma {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_periph_ax_dma";
					bit-shift = <4>;
					#clock-cells = <0>;
				};

				clk_periph_ax_dma: clk_periph_ax_dma {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "clk_periph_ax_dma";
					bit-shift = <5>;
					#clock-cells = <0>;
				};

				pclk_can0: pclk_can0 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_can0";
					bit-shift = <6>;
					#clock-cells = <0>;
				};

				pclk_can1: pclk_can1 {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "pclk_can1";
					bit-shift = <7>;
					#clock-cells = <0>;
				};

				clk_can0_core: clk_can0_core {
					compatible = "clk_gate";
					clocks = <&clk_main_can_pe>;
					clock-names = "clk_main_can_pe";
					clock-output-names = "clk_can0_core";
					bit-shift = <8>;
					#clock-cells = <0>;
				};

				clk_can1_core: clk_can1_core {
					compatible = "clk_gate";
					clocks = <&clk_main_can_pe>;
					clock-names = "clk_main_can_pe";
					clock-output-names = "clk_can1_core";
					bit-shift = <9>;
					#clock-cells = <0>;
				};

				aclk_main_emac: aclk_main_emac {
					compatible = "clk_gate";
					clocks = <&clk_periph_glb>;
					clock-names = "clk_periph_glb";
					clock-output-names = "aclk_main_emac";
					bit-shift = <13>;
					#clock-cells = <0>;
				};
			};

			periph_sysrst0: periph-reset@0 {
				compatible = "axera,lua-rst", "syscon-reset";
				#reset-cells = <1>;
				regmap = <&periph_cru>;
				offset = <LAGUNA_SYSCTL_PERIPH_SWRST0>;
				mask = <0xFFFFFFFF>;
				assert-high = <1>;
			};

			periph_sysrst1: periph-reset@1 {
				compatible = "axera,lua-rst", "syscon-reset";
				#reset-cells = <1>;
				regmap = <&periph_cru>;
				offset = <LAGUNA_SYSCTL_PERIPH_SWRST1>;
				mask = <0xFFFFFF>;
				assert-high = <1>;
			};

			periph_can_sysrst: periph-can-reset {
				compatible = "axera,lua-rst", "syscon-reset";
				#reset-cells = <1>;
				regmap = <&periph_cru>;
				offset = <LAGUNA_SYSCTL_PERIPH_CAN_SWRST>;
				mask = <0x3>;
				assert-high = <1>;
			};
		};

		isp_cru: isp-cru@10001000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x10001000 0x00 0x1000>;
			#address-cells = <1>;
			#size-cells = <1>;
		};

		mm_cru: mm-cru@12004000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x12004000 0x00 0x1000>;
			#address-cells = <1>;
			#size-cells = <1>;
		};

		npu_cru: npu-cru@14310000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x14310000 0x00 0x10000>;
			#address-cells = <1>;
			#size-cells = <1>;
		};

		vpu_cru: vpu-cru@16001000 {
			compatible = "syscon", "simple-mfd";
			reg = <0x00 0x16001000 0x00 0x10000>;
			#address-cells = <1>;
			#size-cells = <1>;
		};
	};
};